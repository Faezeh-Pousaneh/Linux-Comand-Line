#!/bin/bash 
#!/usr/local/bin/gnuplot -persist

array=( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25)
rm Data.txt

for j in "${array[@]}"
do
cd V$j
rm  errest_Fit.xvg max* Fit_av.txt  Fit_err.txt  Dens_err.txt 
rm volume.txt pressure_average.txt pressure_err.txt errest_Dens.xvg *#* rdf_*  max_rdf_sigma_V$j.dat  max_rdf_V$j.dat  Dens_err.txt 
volume.txt pressure_average.txt pressure_err.txt 
errest_pressure.xvg pressure_cleaned.xvg rdf_V$j_cleaned.xvg rdf_V$j.xvg  density.xvg
b=600000
q=0.266
############PRESSURE#########################################################
echo 9 | gmx energy -f NVT.edr  -o pressure.xvg -b $b
gmx analyze -f pressure.xvg  -ee errest_pressure.xvg

sed -n  's/@ s1 legend "ee //p'      errest_pressure.xvg   > pressure_err.txt
sed 's/"//' pressure_err.txt -i

P1=`tail -1  pressure_err.txt  | awk '{print $1*1.59722*0.0010}'`

sed  '1,25d'  pressure.xvg >  pressure_cleaned.xvg
P2= awk '{ total += $2 } END { print total/NR }' pressure_cleaned.xvg  > pressure_average.txt
P3=`tail -1  pressure_average.txt  | awk '{print $1}'`
P4=`tail -1   pressure_average.txt   | awk '{print $1*1.59722*0.0010}'`
############DENSITY#########################################################
echo 0 | gmx density -f NVT.xtc -s NVT.tpr -dens num -b $b
gmx analyze -f density.xvg  -ee errest_Dens.xvg

sed -n  's/@ s1 legend "ee //p'      errest_Dens.xvg  > Dens_err.txt
sed 's/"//' Dens_err.txt -i

sed -n  's/B=//p'      V_$q.sh   > volume.txt
sed 's/"//' volume.txt -i

p0=`tail -1  volume.txt  | awk '{print (1000*179.8*1.38*10^(-23)/(($1)^3.0*10^(-22)))}'`
r1=`tail -1  volume.txt  | awk '{print (1000/(($1)^3.0))*(0.34094)^3.0}'`
r2=`tail -1  Dens_err.txt  | awk '{print ($1/(5))*(0.34094)^3.0}'`
#############RDF########################################################
#gmx rdf  -f  NVT.xtc  -s  NVT.tpr  -pbc   -ref 1 -sel 0   -selrpos  mol_com -seltype  mol_com  -b $b -o rdf_V$j.xvg

sed  '1,30d' RDF.xvg > RDF_cleaned.xvg

R1= awk 'BEGIN {max = 0.00000} {if ($2>max) max=$2} END {print max  }'  RDF_cleaned.xvg     > max_RDF.dat

R2= awk '{if (max<$2) {max=$2;line=$1} } END {print line}'     RDF_cleaned.xvg     >   max_RDF_sigma.dat

R3=`tail -1  max_RDF.dat  | awk '{print $1}'`
R4=`tail -1   max_RDF_sigma.dat  | awk '{print $1}'`
####################VISCOSITY###################################################
cp Fit_VIS_table.txt  Fit_VIS_table.xvg
gmx analyze -f Fit_VIS_table.xvg  -ee errest_Fit.xvg
sed -n  's/@ s1 legend "ee //p'      errest_Fit.xvg   > Fit_err.txt
sed 's/"//' Fit_err.txt -i

sed -n  's/@ s0 legend "av //p'      errest_Fit.xvg   > Fit_av.txt
sed 's/"//' Fit_av.txt -i

v1=`tail -1  Fit_av.txt  | awk '{print $1*100.0/11.03510}'`
v2=`tail -1  Fit_err.txt  | awk '{print $1*100.0/11.03510}'`


v3= awk 'BEGIN {max = 0.00000} {if ($1>max) max=$1} END {print max}' Fit_VIS_err.txt > max_err.dat
v4=`tail -1  max_err.dat  | awk '{print $1*100.0/11.03510}'`  

echo "scale=8;${v4}+${v2}" | bc > t.dat
v5=`tail -1  t.dat  | awk '{print $1}'`
#######################################################################
MYCUSTOMTAB='  '

echo V$j "${MYCUSTOMTAB}"${P3}"${MYCUSTOMTAB}"${p0}"${MYCUSTOMTAB}"${P1}"${MYCUSTOMTAB}"${r1}"${MYCUSTOMTAB}"${r2}"${MYCUSTOMTAB}"${R3}"${MYCUSTOMTAB}"${R4}"${MYCUSTOMTAB}"${v1}"${MYCUSTOMTAB}"${v5} >>../Data.txt

cd ..
done

